image: golang:latest

# The problem is that to be able to use go get, one needs to put # the repository in the $GOPATH. So for example if your gitlab domain # is mydomainperso.com, and that your repository is repos/projectname, and # the default GOPATH being /go, then you'd need to have your # repository in /go/src/mydomainperso.com/repos/projectname # Thus, making a symbolic link corrects this.
before_script:
  - ln -s /builds /go/src/gitlab.com
  - cd /go/src/gitlab.com/passelecasque/varroa
  - go get -u github.com/golang/dep/cmd/dep
  - dep ensure

stages:
  - test
  - build

format:
  stage: test
  script:
    - go tool vet -composites=false -shadow=true *.go
    - go test
  #  - go test -race $(go list ./... | grep -v /vendor/)

compiled_varroa_dev:
  stage: build
  script:
    - cd cmd/varroa
    - go build -v -o ../../varroa
    - cd ../varroa-fuse
    - go build -v -o ../../varroa-fuse
    - cd ../..
    - cp cmd/varroa/bash_completion varroa_bash_completion
  artifacts:
    paths:
    - varroa
    - varroa_bash_completion
    - varroa-fuse
    - script/send-to-varroa.js
    name: "varroa-dev-${CI_COMMIT_REF_NAME}"
    expire_in: 4 weeks
  except:
    - tags

compiled_varroa_released_version:
  stage: build
  script:
    - cd cmd/varroa
    - go build -o ../../varroa
    - cd ../varroa-fuse
    - go build -o ../../varroa-fuse
    - cd ../..
    - cp cmd/varroa/bash_completion varroa_bash_completion
  artifacts:
    paths:
    - varroa
    - varroa_bash_completion
    - varroa-fuse
    - script/send-to-varroa.js
    name: "varroa-${CI_COMMIT_REF_NAME}"
  only:
    - tags

